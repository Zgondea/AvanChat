events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # CORS headers for widget
    map $sent_http_content_type $cors {
        ~^text/css $cors_css;
        ~^application/javascript $cors_js;
        default "";
    }

    map $sent_http_content_type $cors_css {
        default "text/css";
    }

    map $sent_http_content_type $cors_js {
        default "application/javascript";
    }

    server {
        listen 80;
        server_name localhost;
        
        # Allow larger file uploads (50MB)
        client_max_body_size 50M;

        # Serve widget files with CORS headers
        location /widget/ {
            alias /usr/share/nginx/html/widget/;
            
            # Enable CORS for all domains (for widget integration)
            add_header Access-Control-Allow-Origin *;
            add_header Access-Control-Allow-Methods "GET, POST, OPTIONS";
            add_header Access-Control-Allow-Headers "Content-Type, Authorization";
            
            # Cache static assets
            expires 1d;
            add_header Cache-Control "public, immutable";
        }

        # Serve React admin panel at root
        location / {
            root /usr/share/nginx/html/;
            try_files $uri $uri/ /index.html;
            
            # No caching for admin panel
            add_header Cache-Control "no-cache, no-store, must-revalidate";
            add_header Pragma "no-cache";
            add_header Expires "0";
        }
        
        # Serve static assets with caching
        location /static/ {
            root /usr/share/nginx/html/;
            expires 1d;
            add_header Cache-Control "public, immutable";
        }

        # Proxy API requests to backend
        location /api/ {
            proxy_pass http://backend:8000/api/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Handle preflight requests first
                if ($request_method = 'OPTIONS') {
                    add_header Access-Control-Allow-Origin * always;
                    add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
                    add_header Access-Control-Allow-Headers "Content-Type, Authorization" always;
                    add_header Content-Length 0;
                    add_header Content-Type text/plain;
                    return 204;
                }
                add_header Access-Control-Allow-Origin * always;
                add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
                add_header Access-Control-Allow-Headers "Content-Type, Authorization" always;
        }

        # Health check
        location /health {
            proxy_pass http://backend:8000/health;
        }
    }
}