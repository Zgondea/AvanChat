version: '3.8'

services:
  # PostgreSQL Database cu pgvector
  postgres:
    image: pgvector/pgvector:pg16
    container_name: avanchat_postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: chat_legislativ
      POSTGRES_USER: chat_user
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-secure_password_123}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    networks:
      - avanchat_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U chat_user -d chat_legislativ"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis pentru cache
  redis:
    image: redis:7-alpine
    container_name: avanchat_redis
    restart: unless-stopped
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-redis_password_123}
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - avanchat_network
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5

  # Backend FastAPI
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: avanchat_backend
    restart: unless-stopped
    environment:
      - DATABASE_URL=postgresql://chat_user:${POSTGRES_PASSWORD:-secure_password_123}@postgres:5432/chat_legislativ
      - REDIS_URL=redis://:${REDIS_PASSWORD:-redis_password_123}@redis:6379/0
      - SECRET_KEY=${SECRET_KEY:-your-secret-key-change-this-vm-production}
      - ENVIRONMENT=production
      - OLLAMA_URL=http://ollama:11434
      - DEBUG=false
    volumes:
      - ./uploads:/app/uploads
      - ./logs:/app/logs
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      ollama:
        condition: service_started
    networks:
      - avanchat_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Frontend React
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: avanchat_frontend
    restart: unless-stopped
    environment:
      - REACT_APP_API_URL=/api/v1
      - NODE_ENV=production
    depends_on:
      - backend
    networks:
      - avanchat_network

  # Ollama pentru AI
  ollama:
    image: ollama/ollama:latest
    container_name: avanchat_ollama
    restart: unless-stopped
    ports:
      - "11434:11434"
    volumes:
      - ollama_data:/root/.ollama
    networks:
      - avanchat_network
    environment:
      - OLLAMA_HOST=0.0.0.0

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: avanchat_nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.prod.conf:/etc/nginx/nginx.conf
      - ./widget:/usr/share/nginx/html/widget
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - backend
      - frontend
    networks:
      - avanchat_network

volumes:
  postgres_data:
  redis_data:
  ollama_data:

networks:
  avanchat_network:
    driver: bridge